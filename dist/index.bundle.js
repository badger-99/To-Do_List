"use strict";(self.webpackChunkmywebpackstarter=self.webpackChunkmywebpackstarter||[]).push([[826],{426:(n,e,r)=>{r.d(e,{Z:()=>p});var t=r(537),o=r.n(t),a=r(645),i=r.n(a),A=r(667),s=r.n(A),d=new URL(r(389),r.b),c=i()(o()),l=s()(d);c.push([n.id,`/* Importing downloaded font */\n@font-face {\n  font-family: 'Quattrocento', sans-serif;\n  src: url(${l}) format('ttf');\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  border-top: 2rem solid black;\n  padding-top: 4rem;\n  background: #f5f5f5;\n}\n\n.hidden {\n  visibility: hidden;\n  position: fixed;\n  /* top: 0; */\n  left: 50%;\n}\n\nbutton {\n  border: none;\n}\n\n#toDo {\n  border: 1px solid #ddd;\n  font-family: 'Quattrocento', sans-serif;\n  font-size: 1rem;\n  max-width: 36rem;\n  margin: 0 auto;\n  background: white;\n  box-shadow: 0 3px 7px 11px #a8a8a8bf;\n}\n\n#heading {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n}\n\n#refresh {\n  color: #a7a7a7;\n  width: 1.5rem;\n}\n\n#heading {\n  padding: 0.5rem;\n  font-size: 1.2rem;\n  color: #a7a7a7;\n  border-bottom: 0.063rem solid #c2c2c2;\n}\n\n#form {\n  width: 100%;\n  border-bottom: 0.063rem solid #d4d4d4;\n}\n\n#input {\n  padding: 0.5rem;\n  width: 94.2%;\n  border: none;\n}\n\n#input::placeholder {\n  font-size: 1.02rem;\n  font-style: italic;\n  color: #888;\n}\n#submit {\n  padding: 0.1rem;\n  width: 5%;\n  background: none;\n  border: none;\n}\n\n#submit:hover {\n  cursor: pointer;\n}\n\n#arrow {\n  font-size: 1.02rem;\n  color: #c7c7c7;\n}\n\n#empty {\n  color: #a7a7a7;\n  text-align: center;\n}\n\n.task-item {\n  list-style: none;\n  width: 100%;\n  padding: 0 0.5rem;\n  border-bottom: 0.063rem solid #d2d2d2;\n  color: #767676;\n  display: flex;\n  flex-direction: row;\n  gap: 1rem;\n  position: relative;\n}\n\n.textBox {\n  padding: 0.5rem 0;\n  width: 90%;\n  word-wrap: break-word;\n  overflow-wrap: break-word;\n  font-size: 1.02rem;\n  color: #595959;\n  border: none;\n}\n\n.move:hover {\n  cursor: move;\n}\n\n.remove:hover{\n  cursor: pointer;\n}\n\n.fa-ellipsis-vertical,\n.fa-trash-can {\n  color: #a7a7a7;\n  margin: 0 0.5rem;\n}\n\n.fa-trash-can {\n  color: #a7a7a7;\n  margin-right: 0.2rem;\n}\n\n.button {\n  background: inherit;\n  /* padding: 0.1rem; */\n}\n\n.icon {\n  /* border: 1px solid black; */\n  padding: 0.5rem;\n  position: absolute;\n  right: 0;\n}\n\n.move:hover {\n  cursor: move;\n}\n\n#clear {\n  width: 100%;\n  padding: 0.7rem;\n  font-size: 1.02rem;\n  color: #888;\n}\n`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA,8BAA8B;AAC9B;EACE,uCAAuC;EACvC,0DAAuD;AACzD;;AAEA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;AACxB;;AAEA;EACE,4BAA4B;EAC5B,iBAAiB;EACjB,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;EAClB,eAAe;EACf,YAAY;EACZ,SAAS;AACX;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,sBAAsB;EACtB,uCAAuC;EACvC,eAAe;EACf,gBAAgB;EAChB,cAAc;EACd,iBAAiB;EACjB,oCAAoC;AACtC;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;EACE,cAAc;EACd,aAAa;AACf;;AAEA;EACE,eAAe;EACf,iBAAiB;EACjB,cAAc;EACd,qCAAqC;AACvC;;AAEA;EACE,WAAW;EACX,qCAAqC;AACvC;;AAEA;EACE,eAAe;EACf,YAAY;EACZ,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;EAClB,WAAW;AACb;AACA;EACE,eAAe;EACf,SAAS;EACT,gBAAgB;EAChB,YAAY;AACd;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,cAAc;AAChB;;AAEA;EACE,cAAc;EACd,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;EAChB,WAAW;EACX,iBAAiB;EACjB,qCAAqC;EACrC,cAAc;EACd,aAAa;EACb,mBAAmB;EACnB,SAAS;EACT,kBAAkB;AACpB;;AAEA;EACE,iBAAiB;EACjB,UAAU;EACV,qBAAqB;EACrB,yBAAyB;EACzB,kBAAkB;EAClB,cAAc;EACd,YAAY;AACd;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,eAAe;AACjB;;AAEA;;EAEE,cAAc;EACd,gBAAgB;AAClB;;AAEA;EACE,cAAc;EACd,oBAAoB;AACtB;;AAEA;EACE,mBAAmB;EACnB,qBAAqB;AACvB;;AAEA;EACE,6BAA6B;EAC7B,eAAe;EACf,kBAAkB;EAClB,QAAQ;AACV;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,WAAW;EACX,eAAe;EACf,kBAAkB;EAClB,WAAW;AACb",sourcesContent:["/* Importing downloaded font */\r\n@font-face {\r\n  font-family: 'Quattrocento', sans-serif;\r\n  src: url('./QuattrocentoSans-Italic.ttf') format('ttf');\r\n}\r\n\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  border-top: 2rem solid black;\r\n  padding-top: 4rem;\r\n  background: #f5f5f5;\r\n}\r\n\r\n.hidden {\r\n  visibility: hidden;\r\n  position: fixed;\r\n  /* top: 0; */\r\n  left: 50%;\r\n}\r\n\r\nbutton {\r\n  border: none;\r\n}\r\n\r\n#toDo {\r\n  border: 1px solid #ddd;\r\n  font-family: 'Quattrocento', sans-serif;\r\n  font-size: 1rem;\r\n  max-width: 36rem;\r\n  margin: 0 auto;\r\n  background: white;\r\n  box-shadow: 0 3px 7px 11px #a8a8a8bf;\r\n}\r\n\r\n#heading {\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n#refresh {\r\n  color: #a7a7a7;\r\n  width: 1.5rem;\r\n}\r\n\r\n#heading {\r\n  padding: 0.5rem;\r\n  font-size: 1.2rem;\r\n  color: #a7a7a7;\r\n  border-bottom: 0.063rem solid #c2c2c2;\r\n}\r\n\r\n#form {\r\n  width: 100%;\r\n  border-bottom: 0.063rem solid #d4d4d4;\r\n}\r\n\r\n#input {\r\n  padding: 0.5rem;\r\n  width: 94.2%;\r\n  border: none;\r\n}\r\n\r\n#input::placeholder {\r\n  font-size: 1.02rem;\r\n  font-style: italic;\r\n  color: #888;\r\n}\r\n#submit {\r\n  padding: 0.1rem;\r\n  width: 5%;\r\n  background: none;\r\n  border: none;\r\n}\r\n\r\n#submit:hover {\r\n  cursor: pointer;\r\n}\r\n\r\n#arrow {\r\n  font-size: 1.02rem;\r\n  color: #c7c7c7;\r\n}\r\n\r\n#empty {\r\n  color: #a7a7a7;\r\n  text-align: center;\r\n}\r\n\r\n.task-item {\r\n  list-style: none;\r\n  width: 100%;\r\n  padding: 0 0.5rem;\r\n  border-bottom: 0.063rem solid #d2d2d2;\r\n  color: #767676;\r\n  display: flex;\r\n  flex-direction: row;\r\n  gap: 1rem;\r\n  position: relative;\r\n}\r\n\r\n.textBox {\r\n  padding: 0.5rem 0;\r\n  width: 90%;\r\n  word-wrap: break-word;\r\n  overflow-wrap: break-word;\r\n  font-size: 1.02rem;\r\n  color: #595959;\r\n  border: none;\r\n}\r\n\r\n.move:hover {\r\n  cursor: move;\r\n}\r\n\r\n.remove:hover{\r\n  cursor: pointer;\r\n}\r\n\r\n.fa-ellipsis-vertical,\r\n.fa-trash-can {\r\n  color: #a7a7a7;\r\n  margin: 0 0.5rem;\r\n}\r\n\r\n.fa-trash-can {\r\n  color: #a7a7a7;\r\n  margin-right: 0.2rem;\r\n}\r\n\r\n.button {\r\n  background: inherit;\r\n  /* padding: 0.1rem; */\r\n}\r\n\r\n.icon {\r\n  /* border: 1px solid black; */\r\n  padding: 0.5rem;\r\n  position: absolute;\r\n  right: 0;\r\n}\r\n\r\n.move:hover {\r\n  cursor: move;\r\n}\r\n\r\n#clear {\r\n  width: 100%;\r\n  padding: 0.7rem;\r\n  font-size: 1.02rem;\r\n  color: #888;\r\n}\r\n"],sourceRoot:""}]);const p=c},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r="",t=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),t&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=n(e),t&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(n,r,t,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(i[s]=!0)}for(var d=0;d<n.length;d++){var c=[].concat(n[d]);t&&i[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),r&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=r):c[2]=r),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),e.push(c))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],r=n[3];if(!r)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function r(n){for(var r=-1,t=0;t<e.length;t++)if(e[t].identifier===n){r=t;break}return r}function t(n,t){for(var a={},i=[],A=0;A<n.length;A++){var s=n[A],d=t.base?s[0]+t.base:s[0],c=a[d]||0,l="".concat(d," ").concat(c);a[d]=c+1;var p=r(l),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=o(u,t);t.byIndex=A,e.splice(A,0,{identifier:l,updater:m,references:1})}i.push(l)}return i}function o(n,e){var r=e.domAPI(e);return r.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;r.update(n=e)}else r.remove()}}n.exports=function(n,o){var a=t(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=r(a[i]);e[A].references--}for(var s=t(n,o),d=0;d<a.length;d++){var c=r(a[d]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}a=s}}},569:n=>{var e={};n.exports=function(n,r){var t=function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,r)=>{n.exports=function(n){var e=r.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(r){!function(n,e,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,o&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var a=r.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},462:(n,e,r)=>{const t=document.createElement("form"),o=document.createElement("input"),a=document.createElement("button");t.setAttribute("id","form"),o.setAttribute("id","input"),o.setAttribute("type","text"),o.setAttribute("required","required"),o.setAttribute("placeholder","Add to your list..."),a.setAttribute("type","submit"),a.setAttribute("id","submit"),a.innerHTML="<i class=\"fa-solid fa-arrow-turn-down fa-rotate-90\" id='arrow'></i>",t.appendChild(o),t.appendChild(a);const i=document.createElement("div");i.setAttribute("id","heading"),i.innerHTML="<h4>Today's To Do</h4><a href='#' id='refresh'><i class=\"fa-solid fa-arrows-rotate\"></i></a>";const A=document.createElement("button");A.innerHTML="Clear all completed",A.setAttribute("id","clear");const s=(n,e)=>`<li class='task-item'><input type='checkbox' class='status' ${n.completed?"checked":""} data-index="${e}"><input type="text" class="textBox" value="${n.description}" readonly data-index="${e}"><i class='fa-solid fa-ellipsis-vertical icon move'></i><i class='fa-regular fa-trash-can icon remove hidden' data-index="${e}"></i></li>`,d=class{static setStorage=n=>{localStorage.setItem("toDo-list",JSON.stringify(n))};static getStorage=()=>{const n=JSON.parse(localStorage.getItem("toDo-list"));return n&&Array.isArray(n)?n:[]};static showTasks=(n,e)=>{const r=this.getStorage();r.length>0?n.innerHTML=r.map(((n,r)=>e(n,r))).join(""):n.innerHTML="<h4 id='empty'>there is nothing To Do</h4>"};static addIndex=n=>n.map(((n,e)=>({...n,index:e+1})));static addTask=(n,e)=>{n.push(e),this.setStorage(this.addIndex(n))};static removeTask=(n,e)=>{n.splice(e,1),this.setStorage(this.addIndex(n))};static modifyTask=(n,e,r)=>n[e].description=r};var c=r(379),l=r.n(c),p=r(795),u=r.n(p),m=r(569),f=r.n(m),E=r(565),h=r.n(E),C=r(216),b=r.n(C),g=r(589),B=r.n(g),v=r(426),y={};y.styleTagTransform=B(),y.setAttributes=h(),y.insert=f().bind(null,"head"),y.domAPI=u(),y.insertStyleElement=b(),l()(v.Z,y),v.Z&&v.Z.locals&&v.Z.locals;const x=document.getElementById("toDo"),k=document.createElement("ul");k.setAttribute("id","ul"),x.appendChild(i),x.appendChild(t),x.appendChild(k);let w=(new class{constructor(){this.array=[]}getArray(){return this.array}addIndex=()=>(this.array=this.array.map(((n,e)=>({...n,index:e+1}))),this.array)}).getArray();w=[...d.getStorage()],d.showTasks(k,s),x.appendChild(A),t.addEventListener("submit",(n=>{n.preventDefault();const e=new class{constructor(n){this.description=n,this.completed=!1,this.index=0}getTask(){return{description:this.description,completed:this.completed,index:this.index}}}(o.value).getTask();d.addTask(w,e),d.showTasks(k,s),t.reset()})),x.querySelectorAll('input[type="checkbox"]').forEach((n=>{n.addEventListener("change",(()=>{const e=n.nextElementSibling,r=n.dataset.index,t=parseInt(r,10);n.checked?(console.log("I'm checked",t),e.style.textDecoration="line-through"):(e.style.textDecoration="none",console.log("I'm un-checked"))}))})),x.addEventListener("click",(n=>{if(n.target.classList.contains("textBox")){const e=n.target,r=e.nextElementSibling,t=r.nextElementSibling,o=e.dataset.index,a=parseInt(o,10);e.readOnly=!1,r.classList.add("hidden"),t.classList.remove("hidden"),e.addEventListener("blur",(()=>{e.readOnly=!0,w[a].description=e.value;const n=d.addIndex(w);d.setStorage(n),t.addEventListener("click",(n=>{n.preventDefault(),console.log(`remove ${a}`),d.removeTask(w,a),d.showTasks(k,s)}))})),document.body.addEventListener("click",(n=>{n.target===document.body&&(r.classList.remove("hidden"),t.classList.add("hidden"))}))}}))},389:(n,e,r)=>{n.exports=r.p+"e2c87c4f335f8ae6fa63.ttf"}},n=>{n(n.s=462)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,